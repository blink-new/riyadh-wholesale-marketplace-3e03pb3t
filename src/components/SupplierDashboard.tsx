import { useState, useEffect } from 'react'\nimport { \n  Package, \n  ShoppingCart, \n  Star, \n  TrendingUp, \n  Users, \n  Plus, \n  Edit, \n  Eye, \n  MoreHorizontal,\n  AlertCircle,\n  CheckCircle,\n  Clock\n} from 'lucide-react'\nimport { Button } from './ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs'\nimport { Badge } from './ui/badge'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table'\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from './ui/dropdown-menu'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from './ui/dialog'\nimport { Input } from './ui/input'\nimport { Label } from './ui/label'\nimport { Textarea } from './ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select'\nimport { useAuth } from '../hooks/useAuth'\nimport type { Product, Order, Quote, Supplier } from '../types'\n\ninterface SupplierDashboardProps {\n  language: 'en' | 'ar'\n}\n\nexport function SupplierDashboard({ language }: SupplierDashboardProps) {\n  const { user } = useAuth()\n  const [activeTab, setActiveTab] = useState('overview')\n  const [products, setProducts] = useState<Product[]>([])\n  const [orders, setOrders] = useState<Order[]>([])\n  const [quotes, setQuotes] = useState<Quote[]>([])\n  const [supplierProfile, setSupplierProfile] = useState<Supplier | null>(null)\n\n  // Mock data - in real implementation, this would come from API\n  useEffect(() => {\n    // Mock supplier profile\n    setSupplierProfile({\n      id: 'sup_1',\n      userId: user?.id || '',\n      companyName: 'Al-Riyadh Electronics Co.',\n      companyNameAr: 'شركة الرياض للإلكترونيات',\n      category: 'electronics',\n      location: 'Riyadh Industrial City',\n      description: 'Leading supplier of industrial electronics and automation systems in Saudi Arabia.',\n      phone: '+966 11 123 4567',\n      email: 'info@alriyadh-electronics.sa',\n      verified: true,\n      rating: 4.8,\n      totalReviews: 156,\n      totalProducts: 245,\n      status: 'approved',\n      createdAt: '2023-01-15T00:00:00Z',\n      updatedAt: '2024-01-20T00:00:00Z'\n    })\n\n    // Mock products\n    setProducts([\n      {\n        id: '1',\n        supplierId: 'sup_1',\n        name: 'Industrial LED Lighting Systems',\n        nameAr: 'أنظمة الإضاءة LED الصناعية',\n        description: 'High-efficiency LED lighting systems for industrial applications.',\n        category: 'electronics',\n        price: 450,\n        currency: 'SAR',\n        minOrderQuantity: 100,\n        unit: 'units',\n        availabilityStatus: 'available',\n        images: ['https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=300&h=200&fit=crop'],\n        tags: ['LED', 'industrial', 'lighting'],\n        featured: true,\n        createdAt: '2024-01-15T00:00:00Z',\n        updatedAt: '2024-01-20T00:00:00Z'\n      },\n      {\n        id: '2',\n        supplierId: 'sup_1',\n        name: 'Automation Control Panels',\n        nameAr: 'لوحات التحكم الآلي',\n        description: 'Advanced automation control panels for manufacturing.',\n        category: 'electronics',\n        price: 1200,\n        currency: 'SAR',\n        minOrderQuantity: 10,\n        unit: 'units',\n        availabilityStatus: 'available',\n        images: ['https://images.unsplash.com/photo-1581091226825-a6a2a5aee158?w=300&h=200&fit=crop'],\n        tags: ['automation', 'control', 'manufacturing'],\n        featured: false,\n        createdAt: '2024-01-10T00:00:00Z',\n        updatedAt: '2024-01-18T00:00:00Z'\n      }\n    ])\n\n    // Mock orders\n    setOrders([\n      {\n        id: 'ord_1',\n        userId: 'user_1',\n        supplierId: 'sup_1',\n        status: 'processing',\n        totalAmount: 45000,\n        currency: 'SAR',\n        paymentStatus: 'paid',\n        createdAt: '2024-01-20T10:00:00Z',\n        updatedAt: '2024-01-21T14:30:00Z',\n        items: [\n          {\n            id: 'item_1',\n            orderId: 'ord_1',\n            productId: '1',\n            quantity: 100,\n            unitPrice: 450,\n            totalPrice: 45000,\n            createdAt: '2024-01-20T10:00:00Z'\n          }\n        ]\n      },\n      {\n        id: 'ord_2',\n        userId: 'user_2',\n        supplierId: 'sup_1',\n        status: 'shipped',\n        totalAmount: 12000,\n        currency: 'SAR',\n        paymentStatus: 'paid',\n        trackingNumber: 'TRK123456789',\n        createdAt: '2024-01-18T09:00:00Z',\n        updatedAt: '2024-01-19T16:45:00Z',\n        items: [\n          {\n            id: 'item_2',\n            orderId: 'ord_2',\n            productId: '2',\n            quantity: 10,\n            unitPrice: 1200,\n            totalPrice: 12000,\n            createdAt: '2024-01-18T09:00:00Z'\n          }\n        ]\n      }\n    ])\n\n    // Mock quotes\n    setQuotes([\n      {\n        id: 'quote_1',\n        userId: 'user_3',\n        supplierId: 'sup_1',\n        productId: '1',\n        quantity: 200,\n        message: 'Need bulk pricing for 200 units. Can you provide a better rate?',\n        status: 'pending',\n        quotedCurrency: 'SAR',\n        createdAt: '2024-01-21T08:00:00Z',\n        updatedAt: '2024-01-21T08:00:00Z'\n      },\n      {\n        id: 'quote_2',\n        userId: 'user_4',\n        supplierId: 'sup_1',\n        productId: '2',\n        quantity: 5,\n        message: 'Interested in automation panels for small factory setup.',\n        status: 'responded',\n        quotedPrice: 1100,\n        quotedCurrency: 'SAR',\n        supplierResponse: 'Special price for 5 units: 1100 SAR each. Valid for 30 days.',\n        validUntil: '2024-02-20T00:00:00Z',\n        createdAt: '2024-01-19T14:00:00Z',\n        updatedAt: '2024-01-20T10:30:00Z'\n      }\n    ])\n  }, [user])\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />\n      case 'processing':\n      case 'responded':\n        return <AlertCircle className=\"h-4 w-4 text-blue-500\" />\n      case 'shipped':\n      case 'delivered':\n      case 'approved':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      default:\n        return <AlertCircle className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'secondary'\n      case 'processing':\n      case 'responded':\n        return 'default'\n      case 'shipped':\n      case 'delivered':\n      case 'approved':\n        return 'default'\n      case 'cancelled':\n      case 'rejected':\n        return 'destructive'\n      default:\n        return 'secondary'\n    }\n  }\n\n  const AddProductDialog = () => (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button className=\"gradient-primary text-white\">\n          <Plus className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n          {language === 'en' ? 'Add Product' : 'إضافة منتج'}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>\n            {language === 'en' ? 'Add New Product' : 'إضافة منتج جديد'}\n          </DialogTitle>\n          <DialogDescription>\n            {language === 'en' \n              ? 'Add a new product to your catalog'\n              : 'أضف منتجاً جديداً إلى كتالوجك'\n            }\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"productName\">\n                {language === 'en' ? 'Product Name (English)' : 'اسم المنتج (بالإنجليزية)'}\n              </Label>\n              <Input id=\"productName\" placeholder=\"Enter product name\" />\n            </div>\n            <div>\n              <Label htmlFor=\"productNameAr\">\n                {language === 'en' ? 'Product Name (Arabic)' : 'اسم المنتج (بالعربية)'}\n              </Label>\n              <Input id=\"productNameAr\" placeholder=\"أدخل اسم المنتج\" />\n            </div>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"description\">\n              {language === 'en' ? 'Description' : 'الوصف'}\n            </Label>\n            <Textarea \n              id=\"description\" \n              placeholder={language === 'en' \n                ? 'Describe your product...'\n                : 'اوصف منتجك...'\n              }\n              rows={3}\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label htmlFor=\"price\">\n                {language === 'en' ? 'Price (SAR)' : 'السعر (ريال)'}\n              </Label>\n              <Input id=\"price\" type=\"number\" placeholder=\"0.00\" />\n            </div>\n            <div>\n              <Label htmlFor=\"minOrder\">\n                {language === 'en' ? 'Min Order Qty' : 'الحد الأدنى للطلب'}\n              </Label>\n              <Input id=\"minOrder\" type=\"number\" placeholder=\"1\" />\n            </div>\n            <div>\n              <Label htmlFor=\"unit\">\n                {language === 'en' ? 'Unit' : 'الوحدة'}\n              </Label>\n              <Input id=\"unit\" placeholder=\"pieces, kg, meters\" />\n            </div>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"category\">\n              {language === 'en' ? 'Category' : 'الفئة'}\n            </Label>\n            <Select>\n              <SelectTrigger>\n                <SelectValue placeholder={language === 'en' ? 'Select category' : 'اختر الفئة'} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"electronics\">\n                  {language === 'en' ? 'Electronics' : 'الإلكترونيات'}\n                </SelectItem>\n                <SelectItem value=\"textiles\">\n                  {language === 'en' ? 'Textiles' : 'المنسوجات'}\n                </SelectItem>\n                <SelectItem value=\"food-beverages\">\n                  {language === 'en' ? 'Food & Beverages' : 'الأغذية والمشروبات'}\n                </SelectItem>\n                <SelectItem value=\"construction\">\n                  {language === 'en' ? 'Construction' : 'البناء والتشييد'}\n                </SelectItem>\n                <SelectItem value=\"automotive\">\n                  {language === 'en' ? 'Automotive' : 'السيارات'}\n                </SelectItem>\n                <SelectItem value=\"healthcare\">\n                  {language === 'en' ? 'Healthcare' : 'الرعاية الصحية'}\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <Button className=\"w-full gradient-primary text-white\">\n            {language === 'en' ? 'Add Product' : 'إضافة المنتج'}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n\n  if (!supplierProfile) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">\n            {language === 'en' ? 'Loading dashboard...' : 'جاري تحميل لوحة التحكم...'}\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gradient\">\n            {language === 'en' ? 'Supplier Dashboard' : 'لوحة تحكم المورد'}\n          </h1>\n          <p className=\"text-muted-foreground\">\n            {language === 'en' \n              ? `Welcome back, ${supplierProfile.companyName}!`\n              : `مرحباً بعودتك، ${supplierProfile.companyNameAr || supplierProfile.companyName}!`\n            }\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n          {supplierProfile.verified && (\n            <Badge className=\"gradient-primary text-white\">\n              {language === 'en' ? 'Verified' : 'معتمد'}\n            </Badge>\n          )}\n          <Badge variant=\"outline\">\n            ⭐ {supplierProfile.rating} ({supplierProfile.totalReviews})\n          </Badge>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center\">\n              <Package className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n              {language === 'en' ? 'Total Products' : 'إجمالي المنتجات'}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gradient\">{products.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {language === 'en' ? '+2 this month' : '+2 هذا الشهر'}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center\">\n              <ShoppingCart className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n              {language === 'en' ? 'Total Orders' : 'إجمالي الطلبات'}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gradient\">{orders.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {language === 'en' ? '+5 this week' : '+5 هذا الأسبوع'}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center\">\n              <TrendingUp className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n              {language === 'en' ? 'Revenue' : 'الإيرادات'}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gradient\">SAR 57,000</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {language === 'en' ? '+12% from last month' : '+12% من الشهر الماضي'}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center\">\n              <Users className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n              {language === 'en' ? 'Quote Requests' : 'طلبات الأسعار'}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gradient\">{quotes.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {language === 'en' ? '1 pending response' : '1 في انتظار الرد'}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"overview\">\n            {language === 'en' ? 'Overview' : 'نظرة عامة'}\n          </TabsTrigger>\n          <TabsTrigger value=\"products\">\n            {language === 'en' ? 'Products' : 'المنتجات'}\n          </TabsTrigger>\n          <TabsTrigger value=\"orders\">\n            {language === 'en' ? 'Orders' : 'الطلبات'}\n          </TabsTrigger>\n          <TabsTrigger value=\"quotes\">\n            {language === 'en' ? 'Quotes' : 'الأسعار'}\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {language === 'en' ? 'Recent Orders' : 'الطلبات الأخيرة'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {orders.slice(0, 3).map((order) => (\n                    <div key={order.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <p className=\"font-medium\">#{order.id}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {order.totalAmount.toLocaleString()} {order.currency}\n                        </p>\n                      </div>\n                      <Badge variant={getStatusBadgeVariant(order.status)}>\n                        {order.status}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {language === 'en' ? 'Top Products' : 'أفضل المنتجات'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {products.slice(0, 3).map((product) => (\n                    <div key={product.id} className=\"flex items-center space-x-3 rtl:space-x-reverse p-3 border rounded-lg\">\n                      <img \n                        src={product.images[0]} \n                        alt={product.name}\n                        className=\"w-12 h-12 object-cover rounded\"\n                      />\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium text-sm\">\n                          {language === 'en' ? product.name : product.nameAr || product.name}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {product.price} {product.currency}\n                        </p>\n                      </div>\n                      {product.featured && (\n                        <Badge variant=\"secondary\">\n                          {language === 'en' ? 'Featured' : 'مميز'}\n                        </Badge>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"products\" className=\"space-y-6\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-xl font-semibold\">\n              {language === 'en' ? 'Product Catalog' : 'كتالوج المنتجات'}\n            </h2>\n            <AddProductDialog />\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {products.map((product) => (\n              <Card key={product.id} className=\"overflow-hidden\">\n                <div className=\"aspect-video relative\">\n                  <img \n                    src={product.images[0]} \n                    alt={product.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                  {product.featured && (\n                    <Badge className=\"absolute top-2 right-2 gradient-primary text-white\">\n                      {language === 'en' ? 'Featured' : 'مميز'}\n                    </Badge>\n                  )}\n                </div>\n                <CardHeader>\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <CardTitle className=\"text-lg\">\n                        {language === 'en' ? product.name : product.nameAr || product.name}\n                      </CardTitle>\n                      <CardDescription>\n                        {product.price} {product.currency} / {product.unit}\n                      </CardDescription>\n                    </div>\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"icon\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem>\n                          <Eye className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n                          {language === 'en' ? 'View' : 'عرض'}\n                        </DropdownMenuItem>\n                        <DropdownMenuItem>\n                          <Edit className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n                          {language === 'en' ? 'Edit' : 'تعديل'}\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex items-center justify-between\">\n                    <Badge \n                      variant={product.availabilityStatus === 'available' ? 'default' : 'secondary'}\n                    >\n                      {product.availabilityStatus}\n                    </Badge>\n                    <span className=\"text-sm text-muted-foreground\">\n                      {language === 'en' ? 'Min:' : 'الحد الأدنى:'} {product.minOrderQuantity}\n                    </span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"orders\" className=\"space-y-6\">\n          <h2 className=\"text-xl font-semibold\">\n            {language === 'en' ? 'Order Management' : 'إدارة الطلبات'}\n          </h2>\n          \n          <Card>\n            <CardContent className=\"p-0\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{language === 'en' ? 'Order ID' : 'رقم الطلب'}</TableHead>\n                    <TableHead>{language === 'en' ? 'Date' : 'التاريخ'}</TableHead>\n                    <TableHead>{language === 'en' ? 'Amount' : 'المبلغ'}</TableHead>\n                    <TableHead>{language === 'en' ? 'Status' : 'الحالة'}</TableHead>\n                    <TableHead>{language === 'en' ? 'Payment' : 'الدفع'}</TableHead>\n                    <TableHead>{language === 'en' ? 'Actions' : 'الإجراءات'}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {orders.map((order) => (\n                    <TableRow key={order.id}>\n                      <TableCell className=\"font-medium\">#{order.id}</TableCell>\n                      <TableCell>\n                        {new Date(order.createdAt).toLocaleDateString()}\n                      </TableCell>\n                      <TableCell>\n                        {order.totalAmount.toLocaleString()} {order.currency}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                          {getStatusIcon(order.status)}\n                          <Badge variant={getStatusBadgeVariant(order.status)}>\n                            {order.status}\n                          </Badge>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={order.paymentStatus === 'paid' ? 'default' : 'secondary'}>\n                          {order.paymentStatus}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"ghost\" size=\"icon\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuItem>\n                              <Eye className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n                              {language === 'en' ? 'View Details' : 'عرض التفاصيل'}\n                            </DropdownMenuItem>\n                            <DropdownMenuItem>\n                              <Package className=\"h-4 w-4 mr-2 rtl:mr-0 rtl:ml-2\" />\n                              {language === 'en' ? 'Update Status' : 'تحديث الحالة'}\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"quotes\" className=\"space-y-6\">\n          <h2 className=\"text-xl font-semibold\">\n            {language === 'en' ? 'Quote Requests' : 'طلبات الأسعار'}\n          </h2>\n          \n          <div className=\"space-y-4\">\n            {quotes.map((quote) => (\n              <Card key={quote.id}>\n                <CardHeader>\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <CardTitle className=\"text-lg\">#{quote.id}</CardTitle>\n                      <CardDescription>\n                        {language === 'en' ? 'Quantity:' : 'الكمية:'} {quote.quantity} {language === 'en' ? 'units' : 'وحدة'}\n                      </CardDescription>\n                    </div>\n                    <div className=\"flex items-center space-x-2 rtl:space-x-reverse\">\n                      {getStatusIcon(quote.status)}\n                      <Badge variant={getStatusBadgeVariant(quote.status)}>\n                        {quote.status}\n                      </Badge>\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label className=\"text-sm font-medium\">\n                      {language === 'en' ? 'Customer Message:' : 'رسالة العميل:'}\n                    </Label>\n                    <p className=\"text-sm text-muted-foreground mt-1\">\n                      {quote.message}\n                    </p>\n                  </div>\n                  \n                  {quote.status === 'responded' && quote.supplierResponse && (\n                    <div>\n                      <Label className=\"text-sm font-medium\">\n                        {language === 'en' ? 'Your Response:' : 'ردك:'}\n                      </Label>\n                      <p className=\"text-sm text-muted-foreground mt-1\">\n                        {quote.supplierResponse}\n                      </p>\n                      {quote.quotedPrice && (\n                        <p className=\"text-lg font-bold text-gradient mt-2\">\n                          {quote.quotedPrice} {quote.quotedCurrency}\n                        </p>\n                      )}\n                    </div>\n                  )}\n                  \n                  {quote.status === 'pending' && (\n                    <div className=\"flex space-x-2 rtl:space-x-reverse\">\n                      <Button className=\"gradient-primary text-white\">\n                        {language === 'en' ? 'Respond to Quote' : 'الرد على الطلب'}\n                      </Button>\n                      <Button variant=\"outline\">\n                        {language === 'en' ? 'Decline' : 'رفض'}\n                      </Button>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}"